#include "mbed.h"
#include "N5110.h"
#include "Joystick.h" 
#define WAIT_TIME_MS 100 
#define Do  262    
#define re  294
#define mi  330
#define fa  349
#define so  392
#define la  440
#define si  494
#define doh  523
#define reh  554
#define mih  587
#define fah  622
#define soh  660
DigitalOut led1(PC_0);
DigitalOut led2(PC_6);
DigitalOut led3(PC_8);
PwmOut buzzer(PA_15);
AnalogIn LDR(PC_2); 
AnalogIn TMP(PC_3); 
AnalogIn FSR(PA_1); 
DigitalIn button1(PC_10);
DigitalIn button2(PC_11);
DigitalIn button3(PD_2);
Joystick joystick(PC_5, PC_4);
N5110 lcd(PC_7, PA_9, PB_10, PB_5, PB_3, PA_10);
Thread thread;
float TMP_x=0;
float FSR_x=0;
float LDR_x=0;
float y_pos = 24;
float x_pos = 42;
char buffer_alpha[14]={0}; 
char buffer_beta[14]={0};
char buffer_gamma[14]={0};
int t;

const int Temalart[] = {Do , re , mi, fa, so, la, si, doh, reh, mih, fah, soh,};
const int Touchalart[] = {Do , re , mi, fa, so, la, si, doh, doh, doh, doh, doh, doh,};
const int Pointer[5][5]= {
    { 0,0,1,0,0 },
    { 0,0,1,0,0 },
    { 1,1,0,1,1 },
    { 0,0,1,0,0 },
    { 0,0,1,0,0 },
};
const int Mbed[48][84]= {
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,1,1,0,0,0,0,0,0,1,1,1,0,0,1,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,1,0,1,0,0,1,0,0,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,1,1,1,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,1,0,0,0,1,0,0,1,0,0,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,1,0,0,1,0,0,0,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,0,0,0,0,1,0,0,0,0,1,1,1,1,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,1,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};
void play_note(int frequency);
void limit(int x, int y);
void High_temp_alarm();
void Touch_alarm();
void menu();
void LED_thread1(){
    
 led1.write(1);
 while(1){
    ThisThread::sleep_for(100ms);
    led1.write(0); 
    ThisThread::sleep_for(100ms);
    led2.write(1);
    ThisThread::sleep_for(150ms);
    led2.write(0);
    ThisThread::sleep_for(150ms);  
    led3.write(1);
    ThisThread::sleep_for(200ms); 
    led3.write(0);
    ThisThread::sleep_for(200ms); 
    led2.write(1);
    ThisThread::sleep_for(250ms); 
    led2.write(0);
    ThisThread::sleep_for(250ms);  
    led1.write(1);
    ThisThread::sleep_for(300ms); 
    led1.write(0);
    ThisThread::sleep_for(300ms); 
    led2.write(1);
    ThisThread::sleep_for(350ms); 
    led2.write(0); 
    ThisThread::sleep_for(350ms); 
    led3.write(1);
    ThisThread::sleep_for(400ms); 
    led3.write(0);
 }
 }
void LED_thread2() {
while(1){


    led1.write(1);
    ThisThread::sleep_for(100ms);
    led1.write(0); 
    ThisThread::sleep_for(100ms);
    led2.write(1);
    ThisThread::sleep_for(100ms);
    led2.write(0);
    ThisThread::sleep_for(100ms);  
    led3.write(1);
    ThisThread::sleep_for(100ms); 
    led3.write(0);
    ThisThread::sleep_for(100ms); 
    led1.write(1);
    ThisThread::sleep_for(100ms); 
    led1.write(0);
    ThisThread::sleep_for(100ms);     
    led2.write(1);
    ThisThread::sleep_for(100ms); 
    led2.write(0);
    ThisThread::sleep_for(100ms); 
    led3.write(1);
    ThisThread::sleep_for(100ms); 
    led3.write(0); 
    ThisThread::sleep_for(100ms); 
    led1.write(1);
    ThisThread::sleep_for(100ms); 
    led1.write(0);
    }

}

int main()
 {  lcd.init(LPH7366_1);       
    lcd.setContrast(0.50);      
    lcd.setBrightness(0.6 );  
    led1.write(0);
    led2.write(0);
    led3.write(0);
    joystick.init();



Menu:    
   
   lcd.clear();
    lcd.drawSprite(0, 0, 48, 84, (int*)Mbed); 
    
    
   while (1)
{   lcd.refresh();
    

  
   lcd.drawRect(0, 0, 84, 48, FILL_TRANSPARENT); 
       
          
   if(joystick.get_direction() == N && button1.read()==0){
            y_pos--;
        lcd.clear();
         menu(); 
         lcd.drawSprite(x_pos, y_pos, 5, 5, (int*)Pointer);

        }else if(joystick.get_direction() == S){
            y_pos++;
        lcd.clear();
         menu();
         lcd.drawSprite(x_pos, y_pos, 5, 5, (int*)Pointer);
        
        }else if(joystick.get_direction() == E){
            x_pos++;
            lcd.clear();
         menu();
         lcd.drawSprite(x_pos, y_pos, 5, 5, (int*)Pointer);

        }else if(joystick.get_direction() == W){
            x_pos--;
            lcd.clear();
         menu();
         lcd.drawSprite(x_pos, y_pos, 5, 5, (int*)Pointer);

        }else if(joystick.get_direction() == NE){
            y_pos--;
            x_pos++;
        lcd.clear();
         menu();
         lcd.drawSprite(x_pos, y_pos, 5, 5, (int*)Pointer);

        }else if(joystick.get_direction() == NW){
            y_pos--;
            x_pos--;
            lcd.clear();
         menu();
         lcd.drawSprite(x_pos, y_pos, 5, 5, (int*)Pointer);

        }else if(joystick.get_direction() == SE){
            y_pos++;
            x_pos++;
           lcd.clear();
         menu();
         lcd.drawSprite(x_pos, y_pos, 5, 5, (int*)Pointer);

        }else if(joystick.get_direction() == SW){
            y_pos++;
            x_pos--;
             lcd.clear();
         menu();
         lcd.drawSprite(x_pos, y_pos, 5, 5, (int*)Pointer);
        } ThisThread::sleep_for(30ms);
         lcd.refresh();
         limit(x_pos, y_pos);
             
         if (button1.read()){   
             if(x_pos<=50 && x_pos>=30){
                 if(y_pos>=7 && y_pos<=15){
                     while(1){           
                        lcd.clear();  
                        ThisThread::sleep_for(30ms);
                        FSR_x=FSR.read()*100;
                        sprintf(buffer_alpha,"%2.f",FSR_x); 
                        lcd.printString("FSR:        %", 0, 3);
                        lcd.printString(buffer_alpha,40,3);
                        
                        lcd.refresh();            
                        if(FSR_x>60){
                        Touch_alarm();
                        }  
                        if (button2.read()){
                            goto Menu;
                       } 
                     }

                }
                 else if (y_pos>=24 && y_pos<=31){
                    while(1){
                    lcd.clear();
                    ThisThread::sleep_for(200ms); 
                    TMP_x=(TMP.read_u16()*2/300);    
                    sprintf(buffer_beta,"%4.f",TMP_x); 
                    lcd.printString("TMP:        C", 0, 3);
                    lcd.printString(buffer_beta,40,3);
                    lcd.refresh();
                    if(TMP_x>35){
                    High_temp_alarm();
                     } 
                    if (button2.read()){
                            goto Menu;
                     }  
                   
                     } 
               }
                 else if (y_pos>=40 && y_pos<=47){
                     while(1){
                    lcd.clear(); 
                    ThisThread::sleep_for(100ms);
                    LDR_x=LDR.read()*100;
                    sprintf(buffer_gamma,"%4.f",LDR_x);
                    lcd.printString("LDR:        %",0,3);
                    lcd.printString(buffer_gamma,40,3);  
                    if(LDR_x>70){
                        Touch_alarm();
                        }  
                    lcd.refresh(); 
                    if (button2.read()){
                            goto Menu;
                     }  
                    }
                 }
             }
         }
     if (button3.read()==true){
   
      
      play_note(Temalart[3]); 
      play_note(Temalart[3]);
      play_note(Temalart[4]);
      play_note(Temalart[5]);
      play_note(Temalart[5]);
      play_note(Temalart[4]);
      play_note(Temalart[3]);
      play_note(Temalart[2]);
      play_note(Temalart[1]);
      play_note(Temalart[1]);
      play_note(Temalart[2]);
      play_note(Temalart[3]);
      play_note(Temalart[3]);
      play_note(Temalart[2]);
      play_note(Temalart[2]);  


        
      }
   }
 }
    


void play_note(int frequency){
    buzzer.period_us((float) 1000000.0f/ (float) frequency);    //set the period of the pwm signal (in us)
    buzzer.pulsewidth_us(buzzer.read_period_us()/2);            //set pulse width of the pwm to 1/2 the period
    ThisThread::sleep_for(500ms); 
     buzzer.pulsewidth_us(0);                               //play sound for 500ms
}
void limit(int x, int y){
    if (x < 1 ){        
        x_pos = 82;
    }else if (x > 82){  
        x_pos = 1;
    }

    if(y < 1){          
        y_pos = 46;
    }else if(y > 46){   
        y_pos = 1;
    }
}
void Touch_alarm(){thread.start(LED_thread1);
  
    for(int i = 0; i < 13; i++){        
      play_note(Touchalart[i]);    
      }
    buzzer.pulsewidth_us(0);
    
}

void High_temp_alarm() {  
    thread.start(LED_thread2); 
     for(int i = 0; i < 10; i++){        
      play_note(Touchalart[10-i]);    
      }
    

    buzzer.pulsewidth_us(0);
  
    
}
void menu(){
   lcd.printString("FSR", 31, 1);
  lcd.printString("TMP", 31, 3);
  lcd.printString("LDR", 31, 5);
  lcd.drawRect(29, 6, 20, 10, FILL_TRANSPARENT);
  lcd.drawRect(30, 23, 20, 10, FILL_TRANSPARENT);
  lcd.drawRect(29, 39, 20, 10, FILL_TRANSPARENT);
  }